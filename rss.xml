<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ywdxz</title>
        <link>http://ywdxz.github.io/</link>
        <description>一天天的</description>
        <generator>Hugo 0.79.0 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>ywdxz0115@gmail.com (xz)</managingEditor>
        
        
            <webMaster>ywdxz0115@gmail.com (xz)</webMaster>
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
        
        <lastBuildDate>Fri, 11 Dec 2020 14:53:37 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="http://ywdxz.github.io/rss.xml" />
        
        
            <item>
                <title>关于math.NaN() 问题记录</title>
                <link>http://ywdxz.github.io/posts/2020-12-11-3/</link>
                <guid isPermaLink="true">http://ywdxz.github.io/posts/2020-12-11-3/</guid>
                <pubDate>Fri, 11 Dec 2020 14:40:49 &#43;0800</pubDate>
                
                    <author>ywdxz0115@gmail.com (xz)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;p&gt;看 map  源码看到一个测试case,&lt;strong&gt;为什么 k == k&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testMapNan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;length wrong&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// why ?????
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nan disappeared&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;value wrong&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;values wrong&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// nan is a good test because nan != nan, and nan has
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// a randomized hash value.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;TestMapAssignmentNan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;testing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;nan&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NaN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// Test assignment.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;testMapNan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func main() {
    m := make(map[float64]int)
    m[1.4] = 1
    m[2.4] = 2
    m[math.NaN()] = 3
    m[math.NaN()] = 3
    for k, v := range m {
        fmt.Printf(&amp;quot;[%v, %d] &amp;quot;, k, v)
    }
    fmt.Printf(&amp;quot;\nk: %v, v: %d\n&amp;quot;, math.NaN(), m[math.NaN()])
    fmt.Printf(&amp;quot;k: %v, v: %d\n&amp;quot;, 2.400000000001, m[2.400000000001])
    fmt.Printf(&amp;quot;k: %v, v: %d\n&amp;quot;, 2.4000000000000000000000001, m[2.4000000000000000000000001])
    fmt.Println(math.NaN() == math.NaN())
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[2.4, 2] [NaN, 3] [NaN, 3] [1.4, 1] 
k: NaN, v: 0
k: 2.400000000001, v: 0
k: 2.4, v: 2
false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结论：
NaN 不等于 NaN,&lt;strong&gt;为什么NaN!=NaN呢？&lt;/strong&gt;&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
            <item>
                <title>环境变量整理</title>
                <link>http://ywdxz.github.io/posts/2020-12-11-1/</link>
                <guid isPermaLink="true">http://ywdxz.github.io/posts/2020-12-11-1/</guid>
                <pubDate>Fri, 11 Dec 2020 11:38:25 &#43;0800</pubDate>
                
                    <author>ywdxz0115@gmail.com (xz)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;p&gt;经常会用到需要手工设置linux环境变量的情况，每次都是google一下，这边把结果整理一下作为知识储备。&lt;/p&gt;
&lt;h3 id=&#34;临时设置&#34;&gt;临时设置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接执行 export GOBACTRACE=crash： 仅对当前shell生效&lt;/li&gt;
&lt;li&gt;env GOBACTRACE=crash&lt;/li&gt;
&lt;li&gt;set GOBACTRACE=crash&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;set、env、export&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set：显示/设置 shell变量，包括私有变量和用户变量&lt;/li&gt;
&lt;li&gt;env：显示/设置 用户变量&lt;/li&gt;
&lt;li&gt;export：显示/设置 当前导出成用户变量的shell变量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;linux变量分为shell变量和用户变量，export是一个命令，可以将shell变量导出成用户变量。这些变量都可以通过unset来清除掉。&lt;/p&gt;
&lt;h3 id=&#34;永久设置&#34;&gt;永久设置&lt;/h3&gt;
&lt;p&gt;在如下的文件中加上 export GOBACTRACE=crash，然后source一下该文件就可以永久生效。一般选项用bash_profile或者bashrc&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etch/profile：对全部用户生效&lt;/li&gt;
&lt;li&gt;~/.bash_profile：对当前用户生效&lt;/li&gt;
&lt;li&gt;~/.bashrc：启动新的shell是读取并执行&lt;/li&gt;
&lt;li&gt;~/.bash_login：shell登录是读取并执行&lt;/li&gt;
&lt;li&gt;~/.bash_logout：shell退出登录时读取并执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;shell的初始化顺序如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\1. 执行 /etc/profile 的命令，如果存在的话&lt;/li&gt;
&lt;li&gt;\2. 执行 ~/.bash_profile 的命令，如果存在的话&lt;/li&gt;
&lt;li&gt;\3. 执行 ~/.bash_login 的命令，如果存在的话&lt;/li&gt;
&lt;li&gt;\4. 执行 ~/.bashrc 的命令，如果存在的话&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ps：通过在如上的文件中设置一些命令，可以在用户登录时就执行一些操作，如cd到指定目录&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
            <item>
                <title>浮点数整理</title>
                <link>http://ywdxz.github.io/posts/2020-12-11-2/</link>
                <guid isPermaLink="true">http://ywdxz.github.io/posts/2020-12-11-2/</guid>
                <pubDate>Mon, 30 Nov 2020 23:18:10 &#43;0800</pubDate>
                
                    <author>ywdxz0115@gmail.com (xz)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h1 id=&#34;浮点数整理&#34;&gt;浮点数整理&lt;/h1&gt;
&lt;h2 id=&#34;标准&#34;&gt;标准&lt;/h2&gt;
&lt;p&gt;根据国际标准IEEE 754，任意一个二进制浮点数可以表示成下面科学计数的形式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;value = (-1)^sign * fraction * 2^exponent
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;内存布局&#34;&gt;内存布局&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt; &lt;span class=&#34;o&#34;&gt;-----------------------&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sign&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exponent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fraction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;-----------------------&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;sign&#34;&gt;sign&lt;/h2&gt;
&lt;p&gt;符号位，1 byte.（ 0 表示正数，1 表示负数）&lt;/p&gt;
&lt;h2 id=&#34;exponent&#34;&gt;exponent&lt;/h2&gt;
&lt;p&gt;指数位，单精度 8 byte，双精度 23 byte&lt;/p&gt;
&lt;p&gt;exponent 是一个无符号整数，但 exponent 需要表示负数。所以IEEE 754规定，exponent 的真实值必须再减去一个中间数。对于单精度，中间数为：&lt;strong&gt;127&lt;/strong&gt;；对于双精度，中间数为：&lt;strong&gt;1023&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Top&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;exponent 二进制全为 1 时：fraction 全为 0，表示无穷大（±INF），否则表示不是一个数 （NaN）&lt;/li&gt;
&lt;li&gt;exponent 二进制全为 0 时：exponent 真实值为（1-127/1-1023），fraction xxxxx 表示的真实值为 0.xxxxx.（方便表示±0，以及接近于0很小的数字）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;fraction&#34;&gt;fraction&lt;/h2&gt;
&lt;p&gt;有效数字，单精度 11 byte，双精度 52 byte&lt;/p&gt;
&lt;p&gt;（1 &amp;lt;= fraction &amp;lt; 2 ），默认这个数总是 1.xxxx 的形式，因此1可以舍去，只保存后面的xxxxxx部分&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Top&lt;/strong&gt;: exponent 二进制全为 0 时,默认这个数总为 0.xxxx 的形式，因此0可以舍去，只保存后面的xxxxxx部分&lt;/p&gt;
&lt;h2 id=&#34;十进制小数转换为二进制小数&#34;&gt;十进制小数转换为二进制小数&lt;/h2&gt;
&lt;p&gt;​	十进制小数转换成二进制小数采用&amp;quot;乘2取整，顺序排列&amp;quot;法。&lt;/p&gt;
&lt;p&gt;​	具体做法是：用2乘十进制小数，可以得到积，将积的整数部分取出，再用2乘余下的小数 部分，又得到一个积，再将积的整数部分取出，如此进行，直到积中的小数部分为零，或者达到所要求的精度为止。&lt;/p&gt;
&lt;p&gt;eg： 把（0.8125）转换为二进制小数&lt;/p&gt;
&lt;p&gt;0.8125 *2 = 1.625 ==&amp;gt; 1&lt;/p&gt;
&lt;p&gt;0.625 * 2 = 1.25  ==&amp;gt; 1&lt;/p&gt;
&lt;p&gt;0.25 * 2 = 0.5  ==&amp;gt; 0&lt;/p&gt;
&lt;p&gt;0.5 * 2 = 1 ==&amp;gt; 1&lt;/p&gt;
&lt;p&gt;所以：（0.8125）10 ==&amp;gt;（0.1101）2&lt;/p&gt;
&lt;h2 id=&#34;浮点数编码演示&#34;&gt;浮点数编码演示&lt;/h2&gt;
&lt;p&gt;eg: float32(0.5)&lt;/p&gt;
&lt;p&gt;sign = 0&lt;/p&gt;
&lt;p&gt;exponent = 127&lt;/p&gt;
&lt;p&gt;fraction = 1&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
    </channel>
</rss>
